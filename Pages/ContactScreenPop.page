<!--
     Copyright 2016 Revelant Technologies LLC

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.


    /****************************************************************************************************
    ** Page Name   : ContactScreenPop
    ** Created By  : Revelant Technologies
    *                   Revelant Team - info@revelanttech.com
    ** Created Date: April 2016
    ** Description : Loads Contact PopUp in new tab or as a new tab in console
    ** Page params : none
    ** Change Log  : May, 2016 - this was changed to ScreenPop to a Salesforce Case
    ****************************************************************************************************/
-->

<apex:page controller="ContactScreenPopController" standardStylesheets="false" showHeader="false">
    <head>
        <apex:includeScript value="/soap/ajax/26.0/connection.js"/>
        <apex:includescript value="/support/console/36.0/integration.js" />
        <apex:includescript value="/support/api/36.0/interaction.js" />
        <apex:includescript value="{!URLFOR($Resource.jQuery)}" />
        <apex:stylesheet value="{!URLFOR($Resource.bootstrapNew,'css/bootstrap.min.css')}" />
        <apex:includescript value="{!URLFOR($Resource.bootstrapNew,'js/bootstrap.min.js')}" />
        <style>
            .glyphicon-refresh-animate {
                -animation: spin .7s infinite linear;
                -webkit-animation: spin2 .7s infinite linear;
            }
        
            @-webkit-keyframes spin2 {
                from { -webkit-transform: rotate(0deg);}
                to { -webkit-transform: rotate(360deg);}
            }
        
            @keyframes spin {
                from { transform: scale(1) rotate(0deg);}
                to { transform: scale(1) rotate(360deg);}
            }
            .conatiner {
                text-align: center;
            }
        
            .button {
                position: absolute;
                top: 50%;
                right:50%
            }
        </style>
    </head>
    <body>
        <apex:form >
            <button onclick="testGetCallAttachedData();return false;" style="display:none;" class="theButtonId">getAttachedData</button>
            <apex:commandbutton value="Test" action="{!createNewCase}" id="theButton" styleclass="theButton" oncomplete="testFunction('{!oCase.Id}')" style="display:none;"/>
            <apex:inputtext value="{!id}" styleclass="myHiddenField" style="display:none;"/>
            <br/>
            <div class="container">
                <button class="button btn btn-lg btn-warning"><span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span> Incoming Call...</button>
            </div>
        </apex:form>
    </body>
    <script type="text/javascript">
        function testFunction(Id) {
            url = '/' + Id;
            document.cookie = 'inboundCall=true';
            if(sforce.console.isInConsole()) {
                sforce.console.openPrimaryTab(sforce.console.getEnclosingPrimaryTabId(), url, true, 'Case: ' + Id);
            } else {
                window.open(url,'_parent');
            }
            sforce.console.getEnclosingTabId(closeSubtab);
        }

        var closeSubtab = function closeSubtab(result) {
            var tabId = result.id;
            sforce.console.closeTab(tabId, callback);
        };

        var callback = function () {
             if (result.error) {
                console.log("Error message is " + result.error);
             }
         };


        function testGetCallAttachedData() {
            console.log('*****************************function called');
            sforce.console.cti.getCallObjectIds(callback1);
        }

        var callback2 = function (result) {
            console.log('Call attached data  is ' + result.data + '\n Call Type is ' + result.type);
            var str = result.data;
            var res = str.split(":");
            res = res[1].split(",");
            var id = res[0].replace("\"","");
            console.log('call object id is: '+ id);
            $('.myHiddenField').val(id);
            console.log('call object id is 132: '+ $('.myHiddenField').val());
            $('.theButton').click();
        };

        var callback1 = function (result) {
            console.log('*****************************function called callback1');
            if (result.ids && result.ids.length > 0) {
                sforce.console.cti.getCallAttachedData(result.ids[0], callback2, {getCallType:true});
            }
        };

        var statusMap = {PureCloud:{available:"AVAILABLE", queue:"ON_QUEUE",busy:"BUSY"}};
            sforce.console.addEventListener('inin.salesforce.constants.consoleevent.pc.INTERACTION_CONNECTED', function(data){
            console.log('**********************INTERACTION_CONNECTED: ' +JSON.stringify(data));
            sforce.console.fireEvent('inin.salesforce.constants.consoleevent.changestatus', statusMap.PureCloud.busy, function(data){console.log(data);});
            sforce.console.presence.setServicePresenceStatus(statusMap.PureCloud.busy);
            console.log('**********************fireEvent:changestatus change to BUSY: ' +JSON.stringify(data));
            $('.theButtonId').click();
            console.log('Button Clicked');
        });

        sforce.console.addEventListener('inin.salesforce.constants.consoleevent.pc.INTERACTION_DISCONNECTED', function(data){
                    console.log('Function called from ContactScreen page');
            console.log('**********************INTERACTION_DISCONNECTED: ' +JSON.stringify(data));
            sforce.console.fireEvent('inin.salesforce.constants.consoleevent.changestatus', statusMap.PureCloud.available, function(data){console.log(data);});
            sforce.console.presence.setServicePresenceStatus(statusMap.PureCloud.available);
            console.log('**********************fireEvent:changestatus change to AVAILABLE: ' +JSON.stringify(data));
        });

    </script>
</apex:page>